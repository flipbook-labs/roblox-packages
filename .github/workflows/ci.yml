name: CI

on:
  push:
    branches:
      - main
  pull_request:

defaults:
  run:
    shell: bash

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --check

  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows x86_64
            runner-os: windows-2022
            cargo-target: x86_64-pc-windows-msvc

          - name: Windows aarch64
            runner-os: windows-11-arm
            cargo-target: aarch64-pc-windows-msvc

          - name: Linux x86_64
            runner-os: ubuntu-22.04
            cargo-target: x86_64-unknown-linux-gnu

          - name: Linux aarch64
            runner-os: ubuntu-22.04-arm
            cargo-target: aarch64-unknown-linux-gnu

          - name: macOS x86_64
            runner-os: macos-15
            cargo-target: x86_64-apple-darwin

          - name: macOS aarch64
            runner-os: macos-15
            cargo-target: aarch64-apple-darwin

    name: test (${{ matrix.name }})
    runs-on: ${{ matrix.runner-os }}
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          targets: ${{ matrix.cargo-target }}

      - name: Install binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install nextest
        run: cargo binstall cargo-nextest

      - name: Build
        run: |
          cargo build --workspace \
          --locked --all-features \
          --target ${{ matrix.cargo-target }}

      - name: Lint
        run: |
          cargo clippy --workspace \
          --locked --all-features \
          --target ${{ matrix.cargo-target }}

      # TODO: Uncomment when we actually have tests
      # - name: Test
      #   run: |
      #     cargo nextest run --no-fail-fast \
      #     --locked --all-features \
      #     --target ${{ matrix.cargo-target }}

      - name: Smoketest
        run: |
          cargo run -- install RobloxPackages
          find RobloxPackages -name Foundation.lua
